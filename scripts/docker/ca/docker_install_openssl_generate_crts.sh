#!/bin/bash

if [[ "$(id -u)" -ne 0 ]]; then
    echo "Not running as root. Re-running as root."
    exec sudo -E "$0" "$@"
fi

CA_IMAGE_NAME="ca"

run_or_exit()
{
    "$@"
    local RESULT=$?
    if [[ "${RESULT}" -ne 0 ]]; then
        exit 1
    fi
}

echo "Running as $(whoami)."

run_or_exit docker build \
-t "${CA_IMAGE_NAME}" \
-f ../../ca.Dockerfile \
--build-arg CA_ADMIN_HOME="${CA_ADMIN_HOME}" \
--build-arg DATABASE_CERTS_DIRECTORY="${DATABASE_CERTS_DIRECTORY}" \
--build-arg APP_CERTS_DIRECTORY="${APP_CERTS_DIRECTORY}" \
--progress=plain \
../..

run_or_exit docker run \
--name "container_${CA_IMAGE_NAME}" \
-e CA_ADMIN_USER="${CA_ADMIN_USER}" \
-e CA_ADMIN_GROUP="${CA_ADMIN_GROUP}" \
-e CA_ADMIN_HOME="${CA_ADMIN_HOME}" \
-e CA_KEY="${CA_KEY}" \
-e CA_KEY_PERMISSIONS="${CA_KEY_PERMISSIONS}" \
-e CA_KEY_PASSWORD="${CA_KEY_PASSWORD}" \
-e CA_CSR="${CA_CSR}" \
-e CA_CSR_PERMISSIONS="${CA_CSR_PERMISSIONS}" \
-e CA_CRT="${CA_CRT}" \
-e CA_CRT_PERMISSIONS="${CA_CRT_PERMISSIONS}" \
-e DATABASE_ADMIN_USER="${DATABASE_ADMIN_USER}" \
-e DATABASE_ADMIN_UID="${DATABASE_ADMIN_UID}" \
-e DATABASE_ADMIN_GID="${DATABASE_ADMIN_GID}" \
-e DATABASE_CERTS_DIRECTORY="${DATABASE_CERTS_DIRECTORY}" \
-e DATABASE_SERVER_KEY="${DATABASE_SERVER_KEY}" \
-e DATABASE_SERVER_KEY_PERMISSIONS="${DATABASE_SERVER_KEY_PERMISSIONS}" \
-e DATABASE_SERVER_KEY_PASSWORD="${DATABASE_SERVER_KEY_PASSWORD}" \
-e DATABASE_SERVER_KEY_WITHOUT_PASSWORD="${DATABASE_SERVER_KEY_WITHOUT_PASSWORD}" \
-e DATABASE_SERVER_KEY_WITHOUT_PASSWORD_PERMISSIONS="${DATABASE_SERVER_KEY_WITHOUT_PASSWORD_PERMISSIONS}" \
-e DATABASE_SERVER_CSR="${DATABASE_SERVER_CSR}" \
-e DATABASE_SERVER_CSR_PERMISSIONS="${DATABASE_SERVER_CSR_PERMISSIONS}" \
-e DATABASE_SERVER_CRT="${DATABASE_SERVER_CRT}" \
-e DATABASE_SERVER_CRT_PERMISSIONS="${DATABASE_SERVER_CRT_PERMISSIONS}" \
-e DATABASE_SERVER_CONF="${DATABASE_SERVER_CONF}" \
-e DATABASE_SERVER_CONF_PERMISSIONS="${DATABASE_SERVER_CONF_PERMISSIONS}" \
-e DATABASE_SERVER_ALTERNATE_HOSTNAME="${DATABASE_SERVER_ALTERNATE_HOSTNAME}" \
-e DATABASE_ADMIN_KEY="${DATABASE_ADMIN_KEY}" \
-e DATABASE_ADMIN_KEY_PERMISSIONS="${DATABASE_ADMIN_KEY_PERMISSIONS}" \
-e DATABASE_ADMIN_KEY_PASSWORD="${DATABASE_ADMIN_KEY_PASSWORD}" \
-e DATABASE_ADMIN_CSR="${DATABASE_ADMIN_CSR}" \
-e DATABASE_ADMIN_CSR_PERMISSIONS="${DATABASE_ADMIN_CSR_PERMISSIONS}" \
-e DATABASE_ADMIN_CRT="${DATABASE_ADMIN_CRT}" \
-e DATABASE_ADMIN_CRT_PERMISSIONS="${DATABASE_ADMIN_CRT_PERMISSIONS}" \
-e APP_NAME="${APP_NAME}" \
-e APP_USER_UID="${APP_USER_UID}" \
-e APP_USER_GID="${APP_USER_GID}" \
-e APP_CERTS_DIRECTORY="${APP_CERTS_DIRECTORY}" \
-e APP_KEY="${APP_KEY}" \
-e APP_KEY_PERMISSIONS="${APP_KEY_PERMISSIONS}" \
-e APP_DER_KEY="${APP_DER_KEY}" \
-e APP_DER_KEY_PERMISSIONS="${APP_DER_KEY_PERMISSIONS}" \
-e APP_KEY_PASSWORD="${APP_KEY_PASSWORD}" \
-e APP_CSR="${APP_CSR}" \
-e APP_CSR_PERMISSIONS="${APP_CSR_PERMISSIONS}" \
-e APP_CRT="${APP_CRT}" \
-e APP_CRT_PERMISSIONS="${APP_CRT_PERMISSIONS}" \
--mount "type=bind,src=${CA_ADMIN_HOME},dst=${CA_ADMIN_HOME}" \
--mount "type=bind,src=${DATABASE_CERTS_DIRECTORY},dst=${DATABASE_CERTS_DIRECTORY}" \
--mount "type=bind,src=${APP_CERTS_DIRECTORY},dst=${APP_CERTS_DIRECTORY}" \
--rm \
"${CA_IMAGE_NAME}"

echo "Finished running as $(whoami)."

echo